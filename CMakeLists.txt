cmake_minimum_required(VERSION 3.18..3.20)

project(mymodule)

# Set C++17 standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Find the xtensor package
find_package(xtensor REQUIRED)

# Add executable targets
add_executable(Simulation_01_analytic_solution Simulation_01/analytic_solution.cpp)
add_executable(Simulation_01_monte_carlo_simulation Simulation_01/monte_carlo_simulation.cpp)
add_executable(Simulation_02_analytic_solution Simulation_02/analytic_solution.cpp)
add_executable(Simulation_02_monte_carlo_simulation Simulation_02/monte_carlo_simulation.cpp)
add_executable(Simulation_03_analytic_solution Simulation_03/analytic_solution.cpp)
add_executable(Simulation_03_monte_carlo_simulation Simulation_03/monte_carlo_simulation.cpp)
add_executable(Simulation_04_analytic_solution Simulation_04/analytic_solution.cpp)
add_executable(Simulation_04_monte_carlo_simulation Simulation_04/monte_carlo_simulation.cpp)
add_executable(Simulation_05_analytic_solution Simulation_05/analytic_solution.cpp)
add_executable(Simulation_05_monte_carlo_simulation Simulation_05/monte_carlo_simulation.cpp)
add_executable(Simulation_06_analytic_solution Simulation_06/analytic_solution.cpp)
add_executable(Simulation_06_monte_carlo_simulation Simulation_06/monte_carlo_simulation.cpp)
add_executable(Simulation_07_monte_carlo_simulation Simulation_07/monte_carlo_simulation.cpp)

# Link xtensor library
target_link_libraries(Simulation_01_analytic_solution PUBLIC xtensor pthread)
target_link_libraries(Simulation_01_monte_carlo_simulation PUBLIC xtensor pthread)
target_link_libraries(Simulation_02_analytic_solution PUBLIC xtensor pthread)
target_link_libraries(Simulation_02_monte_carlo_simulation PUBLIC xtensor pthread)
target_link_libraries(Simulation_03_analytic_solution PUBLIC xtensor pthread)
target_link_libraries(Simulation_03_monte_carlo_simulation PUBLIC xtensor pthread)
target_link_libraries(Simulation_04_analytic_solution PUBLIC xtensor pthread)
target_link_libraries(Simulation_04_monte_carlo_simulation PUBLIC xtensor pthread)
target_link_libraries(Simulation_05_analytic_solution PUBLIC xtensor pthread)
target_link_libraries(Simulation_05_monte_carlo_simulation PUBLIC xtensor pthread)
target_link_libraries(Simulation_06_analytic_solution PUBLIC xtensor pthread)
target_link_libraries(Simulation_06_monte_carlo_simulation PUBLIC xtensor pthread)
target_link_libraries(Simulation_07_monte_carlo_simulation PUBLIC xtensor pthread)

# Link the filesystem library if necessary (GCC < 9 might need this)
if(${CMAKE_CXX_COMPILER_ID} STREQUAL "GNU")
    if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 9.0)
        target_link_libraries(Simulation_01_analytic_solution PUBLIC stdc++fs)
        target_link_libraries(Simulation_01_monte_carlo_simulation PUBLIC stdc++fs)
        target_link_libraries(Simulation_02_analytic_solution PUBLIC stdc++fs)
        target_link_libraries(Simulation_02_monte_carlo_simulation PUBLIC stdc++fs)
        target_link_libraries(Simulation_03_analytic_solution PUBLIC stdc++fs)
        target_link_libraries(Simulation_03_monte_carlo_simulation PUBLIC stdc++fs)
        target_link_libraries(Simulation_04_analytic_solution PUBLIC stdc++fs)
        target_link_libraries(Simulation_04_monte_carlo_simulation PUBLIC stdc++fs)
        target_link_libraries(Simulation_05_analytic_solution PUBLIC stdc++fs)
        target_link_libraries(Simulation_05_monte_carlo_simulation PUBLIC stdc++fs)
        target_link_libraries(Simulation_06_analytic_solution PUBLIC stdc++fs)
        target_link_libraries(Simulation_06_monte_carlo_simulation PUBLIC stdc++fs)
        target_link_libraries(Simulation_07_monte_carlo_simulation PUBLIC stdc++fs)
    endif()
endif()
